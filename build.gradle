plugins {
	id 'fabric-loom' version '1.0-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven { url 'https://jitpack.io' }
}

sourceSets {
	main {
		compileClasspath += main.compileClasspath
		runtimeClasspath += main.runtimeClasspath
	}
}

dependencies {
    implementation 'org.projectlombok:lombok:1.18.24'

    // To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// net.wurstclient.ai.PathPos extends net.minecraft.util.math.BlockPos,
	// which uses javax.annotation.concurrent.Immutable, which is part of
	// the JSR305 library.
	//
	// In other words, Wurst won't compile without this library,
	// even though it's Minecraft that actually uses it.
	modImplementation 'com.google.code.findbugs:jsr305:3.0.2'

	// Reflection
	modImplementation 'org.reflections:reflections:0.10.2'
	include 'org.reflections:reflections:0.10.2'

	//Fix Reflections
	modImplementation 'org.javassist:javassist:3.29.2-GA'
	include 'org.javassist:javassist:3.29.2-GA'

	//Lombok
	compileOnly 'org.projectlombok:lombok:1.18.24'
	annotationProcessor 'org.projectlombok:lombok:1.18.20'

	//Baritone API
	implementation files("Libs/baritone-api-fabric-1.9.4-deof.jar")

	//This is for the renderer
	implementation(group: 'org.apache.xmlgraphics', name: 'batik-transcoder', version: '1.16') {
		exclude group: "xml-apis", module: "xml-apis"
		exclude group: "commons-io", module: "commons-io"
	}
	implementation(group: 'org.apache.xmlgraphics', name: 'batik-codec', version: '1.16') {
		exclude group: "xml-apis", module: "xml-apis"
		exclude group: "commons-io", module: "commons-io"
	}

	implementation files("Libs/0xJester-1.7-deof.jar")

}

processResources {
	inputs.property "version", project.version
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from sourceSets.main.output
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
	manifest {
		attributes(
				'Main': 'me.third.right.pluginBase.PluginMain',
				'Mixin': 'pluginBase.mixins.json',
				'TargetVersion': '1.7',
		)
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}